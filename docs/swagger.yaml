basePath: /
definitions:
  api.CreateSubscriptionRequest:
    properties:
      end_date:
        example: 12-2025
        type: string
      price:
        example: 500
        type: integer
      service_name:
        example: Netflix
        type: string
      start_date:
        example: 01-2025
        type: string
      user_id:
        example: 60601fee-2bf1-4721-ae6f-7636e79a0cba
        type: string
    required:
    - price
    - service_name
    - start_date
    - user_id
    type: object
  api.CreateSubscriptionResponse:
    properties:
      id:
        example: 1
        type: integer
      message:
        example: subscription created successfully
        type: string
    type: object
  api.ErrorResponse:
    properties:
      error:
        example: error description
        type: string
    type: object
  api.SuccessResponse:
    properties:
      message:
        example: operation completed successfully
        type: string
    type: object
  api.TotalCostResponse:
    properties:
      total_cost:
        example: 1500
        type: integer
    type: object
  api.UpdateSubscriptionRequest:
    properties:
      end_date:
        example: 12-2025
        type: string
      price:
        example: 600
        type: integer
      service_name:
        example: Netflix Premium
        type: string
      start_date:
        example: 01-2025
        type: string
      user_id:
        example: 60601fee-2bf1-4721-ae6f-7636e79a0cba
        type: string
    required:
    - price
    - service_name
    - start_date
    - user_id
    type: object
  repository.Subscription:
    properties:
      created_at:
        type: string
      end_date:
        type: string
      id:
        type: integer
      price:
        type: integer
      service_name:
        type: string
      start_date:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
host: localhost:9091
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: REST API for managing user subscriptions
  termsOfService: http://swagger.io/terms/
  title: Subscription Service API
  version: "1.0"
paths:
  /subscriptions:
    get:
      consumes:
      - application/json
      description: Get a list of subscriptions with optional filtering
      parameters:
      - description: User ID for filtering
        in: query
        name: user_id
        type: string
      - description: Service name for filtering
        in: query
        name: service_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repository.Subscription'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: List subscriptions
      tags:
      - subscriptions
    post:
      consumes:
      - application/json
      description: Create a new subscription with the provided data
      parameters:
      - description: Subscription data
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/api.CreateSubscriptionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.CreateSubscriptionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Create a new subscription
      tags:
      - subscriptions
  /subscriptions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a subscription by ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Delete subscription
      tags:
      - subscriptions
    get:
      consumes:
      - application/json
      description: Retrieve a specific subscription by its ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Subscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get subscription by ID
      tags:
      - subscriptions
    put:
      consumes:
      - application/json
      description: Update an existing subscription by ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated subscription data
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/api.UpdateSubscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Update subscription
      tags:
      - subscriptions
  /subscriptions/cost:
    get:
      consumes:
      - application/json
      description: Calculate total cost of subscriptions for a specific period with
        optional filtering
      parameters:
      - description: User ID for filtering
        in: query
        name: user_id
        type: string
      - description: Service name for filtering
        in: query
        name: service_name
        type: string
      - description: Start date in MM-YYYY format
        in: query
        name: start_date
        required: true
        type: string
      - description: End date in MM-YYYY format
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.TotalCostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Calculate total cost
      tags:
      - subscriptions
swagger: "2.0"
